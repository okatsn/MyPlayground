name: install-julia-print-hello

# on: [push]
on:
  push:
    branches: [ trygithubaction ]
jobs:
  install-julia:
    runs-on: ubuntu-20.04
    steps:
    - name: Set variable
      run: echo '::set-output name=THIS_BRANCH::trygithubaction' # SETME
      id: VAR
    - name: Print variable
      run: echo "This branch is ${{steps.VAR.outputs.THIS_BRANCH}}" # see this to set variable: https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#example-setting-a-value
      # you can see other workflow commnads: https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#example-setting-a-value
    - uses: julia-actions/setup-julia@v1
      with:
        version: 1.6.7
    - uses: actions/checkout@v3 # see https://github.com/actions/checkout
      id: checkout
      with:
        ref: ${{steps.VAR.outputs.THIS_BRANCH}}
    - name: Print message and execute a julia script
      run: | # `|` allows multi-line execution
          julia -e 'println("This is julia $(VERSION)")'
          julia -e 'println("Does it work on a branch besides master?"); println("Yes, it works!");'
          julia -e '
            println("Current directory of julia: $(pwd())");
            println("Files and folders under the current directory: ")
            println(readdir());
            println( [(root, dirs, files) for (root, dirs, files) in walkdir("./script")])
            '
          echo "Let's print some environment variables: "
          echo "GITHUB_WORKSPACE:" ${GITHUB_WORKSPACE}
          echo "GITHUB_ACTION_REPOSITORY:" ${GITHUB_ACTION_REPOSITORY}
          echo "GITHUB_PATH: " ${GITHUB_PATH}
          julia --project=. -e 'using Pkg; Pkg.instantiate(); include("./script/github_actions/julia_script.jl")'
    - uses: stefanzweifel/git-auto-commit-action@v4 # see https://github.com/marketplace/actions/git-auto-commit
      with:
        commit_message: Save myplot.txt
        branch: ${{steps.VAR.outputs.THIS_BRANCH}}

# TOREAD:
# Documenter
# - https://discourse.julialang.org/t/easy-workflow-file-for-setting-up-github-actions-ci-for-your-julia-package/49765
# workflow-syntax-for-github-actions: https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepswith

# KEYNOTE:
# - Julia `--project` command: https://stackoverflow.com/questions/53613663/what-is-in-julia-project-command-line-option
#
# If you'd like to define variable for `run:`, see https://microsoft.github.io/code-with-engineering-playbook/continuous-delivery/devops-provider-recipes/github-actions/runtime-variables/runtime-variables/
# If youd
